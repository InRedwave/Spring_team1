<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team01.myapp.admin.dao.IAdminRepository">

	<!-- 유저 리스트 -->
	<select id="selectTotalCategoryListNum" resultType="int"
		parameterType="int">
		<![CDATA[
			select count(*) from users where subject_id=#{subjectId}
		]]>
	</select>

	<select id="selectUserListBySubject" parameterType="map"
		resultType="com.team01.myapp.admin.model.UserList">
		<![CDATA[
		
		select 
			 rownum,
		    u_id as "userId",
			u_name as "userName",
			major ,
			grade,
			subject_name as "subjectName" 
			from(
				select 
					rownum as rnum,
		            u_id ,
					u_name,
					major,
					grade,
					subject_name 
				from(
				select       
					u_id ,
					u_name,
					major,
					grade,
					subject_name  
						from(
						    select 
						        u_id ,
								u_name,
								major,
								grade,
								s.subject_name
				            from users u, subject s 
				            where #{subjectId} = s.subject_id and u.subject_id = #{subjectId} and major != '관리자'
				        )
				order by grade desc, u_id asc
				) 
				where rownum <= #{end}
				) 
				where rnum >= #{start}
		]]>

	</select>

	<!-- 유저 상세 조회 -->
	<select id="selectUser" parameterType="string"
		resultType="com.team01.myapp.admin.model.User">
	<![CDATA[
		SELECT 
		     u.u_id as "userId",
		     u_name as "userName",
		     major,
		     grade,
		     phone,
		     u_type as "userType",
		     password,
		     email,
		     u.subject_id as "subjectId", 
		     s.subject_name as "subjectName",
		     f.u_file_id as "userFileId",
		     f.u_file_name as "userFileName",
		     f.u_file_size as "userFileSize",
		     f.u_file_content_type as "userFileContentType" 
		     
		  FROM 
		    subject s
		     , users u LEFT OUTER JOIN u_file f
				    ON u.u_id =f.u_id
		  WHERE u.u_id = #{userId} and u.subject_id = s.subject_id 
	]]>
	</select>

	<select id="selectFile" parameterType="String"
		resultType="com.team01.myapp.admin.model.UserUploadFile">
	<![CDATA[
		SELECT 
			u_file_id as "userFileId",
			u_id as "userId",
			u_file_name as "userFileName",
			u_file_size as "userFileSize",
			u_file_content_type as "userFileContentType",
			u_file_data	AS	"userFileData"
		FROM U_FILE
		WHERE U_FILE_ID=#{userFileId}			
	]]>
	</select>

	<select id="selectTotalSubAttListByPNum" resultType="int"
		parameterType="int">
		<![CDATA[
			select count(*) from sub_attendance 
		]]>
			<if test="resultNum ==1">
			where result != '미처리'
			</if>
			<if test="resultNum ==2">
			where result = '미처리'
			</if>
			
	</select>
	
	<select id="selectSubAttListbyRNum" parameterType="map"
		resultType="com.team01.myapp.admin.model.SubAttList">
		<![CDATA[
		
		select 
			rownum,
			sub_att_no as "subAttNo",
		    u_id as "userId",
			u_name as "userName",
			sub_attendance_title as "title",
			sub_att_date as "writeDate",
			result, 
			sub_status as "subStatus"
			from(
				select 
					rownum as rnum,
		            sub_att_no ,
					u_id,
					u_name,
					sub_attendance_title,
					sub_att_date,
					result,
					sub_status 
				from(
				select       
					sub_att_no ,
					u_id,
					u_name,
					sub_attendance_title,
					sub_att_date,
					result,
					sub_status 
						from(
						    select 
						       	sub_att_no,
								u.u_id,
								u.u_name,
								sub_attendance_title,
								sub_att_date,
								result,
								sub_status 						
				            from users u, sub_attendance s 
				            where u.u_id = s.u_id
				            ]]>
				            <if test="resultNum == 1">
				            and result != '미처리'
				            </if>
				            
				            <if test="resultNum == 2">
				            and result ='미처리'
				            </if>
				            
				<![CDATA[        
				        )
				order by sub_att_no desc
				) 
				where rownum <= #{end}
				) 
				where rnum >= #{start}
			]]>

	</select>

	<select id="selectMaxFileId" parameterType="int"
		resultType="int">
	<![CDATA[
		SELECT
			NVL(MAX(U_file_id),0) AS "userFileId"
		FROM U_FILE
	]]>
	</select>

	<insert id="insertUserFile"
		parameterType="com.team01.myapp.admin.model.UserUploadFile">
	<![CDATA[	
		INSERT INTO
		U_FILE
			(U_FILE_ID, U_ID, U_FILE_NAME, U_FILE_SIZE, U_FILE_CONTENT_TYPE, U_FILE_DATA)
		VALUES
			(#{userFileId}, #{userId}, #{userFileName}, #{userFileSize}, #{userFileContentType}, #{userFileData})
	]]>
	</insert>

	<!-- 수정하기 -->
	<update id="updateUser"
		parameterType="com.team01.myapp.admin.model.User">
	<![CDATA[
		UPDATE 
			users
		SET 
			u_name=#{userName}, grade=#{grade}, password=#{password},
			EMAIL=#{email}, phone=#{phone}
		WHERE 
			u_id=#{userId}
	]]>
	</update>

	<update id="updateFileData"
		parameterType="com.team01.myapp.admin.model.UserUploadFile">
	<![CDATA[
		UPDATE 
			u_file
		SET 
			u_file_name=#{userFileName}, u_file_size=#{userFileSize},
			u_file_content_type=#{userFileContentType},u_file_data=#{userFileData}			
		WHERE 
			u_id=#{userId}
	]]>
	</update>

	<insert id="insertFileData"
		parameterType="com.team01.myapp.admin.model.UserUploadFile">
	<![CDATA[	
		INSERT INTO
		u_file
			(u_file_id, u_id, u_file_name, u_file_size, u_file_content_type, u_file_data)
		VALUES
			(SEQ_U_FILE_ID.nextval, #{userId}, #{userFileName}, #{userFileSize}, #{userFileContentType}, #{userFileData})
	]]>
	</insert>

	<select id="selectSubAttendanceDetail" parameterType="int"
		resultType="com.team01.myapp.admin.model.SubAttendance">
		<![CDATA[
			SELECT
			    SUB_ATTENDANCE.SUB_ATT_NO as subAttNo,
			    att_no as "attNo",
			    SUB_ATT_TIME as subAttTime,
			    SUB_LEAVE_TIME as subLeaveTime,
			    CONTENT as content,
			    RESULT as result,
			    SUB_ATTENDANCE_TITLE as subAttendanceTitle,
			    SUB_ATT_DATE as subAttDate,
			    SUB_STATUS as subStatus,
			    U_ID as userId,
			    SA_FILE_ID as fileId,
			    SA_FILE_NAME as fileName,
			    SA_FILE_SIZE as fileSize,
			    SA_FILE_CONTENT_TYPE as fileContentType
			FROM SUB_ATTENDANCE LEFT OUTER JOIN SUB_ATT_FILE
			ON SUB_ATTENDANCE.SUB_ATT_NO = SUB_ATT_FILE.SUB_ATT_NO
			WHERE SUB_ATTENDANCE.SUB_ATT_NO = #{subAttNo}
		]]>
	</select>
	
	<update id="updateSubatt" parameterType="map">
	
		UPDATE 
			sub_attendance
		SET 
			<if test="result==1">
			result='승인'	
			</if>
			<if test="result==2">
			result='거절'	
			</if>
		WHERE 
			sub_att_no=#{subAttNo}
	
	</update>
	
	<update id="updateAtt" parameterType="map">
		UPDATE 
			attendance
		SET 
			status='휴가'	
			<if test='subStatus == "조퇴"'>
			,
			leave_time = #{subLeaveTime}
			</if>
			<if test='subStatus == "경조사" or subStatus == "공가"'>
			,
			att_time = #{subAttTime},
			leave_time = #{subLeaveTime}
			</if>
				
		WHERE 
			att_no=#{attNo}
	</update>
	
	<select id="selectAttSumMonthly" parameterType="int"
		resultType="com.team01.myapp.admin.model.AttSummaryVo">
		
		select
		    (SELECT
		    count(*)
		    FROM attendance
		    WHERE TO_CHAR(att_date, 'YYMM') = TO_CHAR(sysdate, 'YYMM') and status ='출근' and subject_id=#{subjectId}) as "attendanceSum",
		    
		    (SELECT
		    count(*)
		    FROM attendance
		    WHERE TO_CHAR(att_date, 'YYMM') = TO_CHAR(sysdate, 'YYMM') and status ='휴가' and subject_id=#{subjectId}) as "leaveSum",
		    
		    (SELECT
		    count(*)
		    FROM attendance
		    WHERE TO_CHAR(att_date, 'YYMM') = TO_CHAR(sysdate, 'YYMM') and status ='지각' and subject_id=#{subjectId}) as "lateSum",
		    
		    (SELECT
		    count(*)
		    FROM attendance
		    WHERE TO_CHAR(att_date, 'YYMM') = TO_CHAR(sysdate, 'YYMM') and status ='결근' and subject_id=#{subjectId}) as "absenceSum",
	    
	    	(SELECT
	        subject_name	   
		    FROM subject
		    WHERE subject_id=#{subjectId})  as "subjectName"
	    
	    from dual
		
	</select>
	
	<select id="selectAttSumDaily" parameterType="int"
		resultType="com.team01.myapp.admin.model.AttSummaryVo">
		
		select
		    (SELECT
		    count(*)
		    FROM attendance
		    WHERE TO_CHAR(att_date, 'YYMMDD') = TO_CHAR(sysdate, 'YYMMDD') and status ='출근' and subject_id=#{subjectId}) as "attendanceSum",
		    
		    (SELECT
		    count(*)
		    FROM attendance
		    WHERE TO_CHAR(att_date, 'YYMMDD') = TO_CHAR(sysdate, 'YYMMDD') and status ='휴가' and subject_id=#{subjectId}) as "leaveSum",
		    
		    (SELECT
		    count(*)
		    FROM attendance
		    WHERE TO_CHAR(att_date, 'YYMMDD') = TO_CHAR(sysdate, 'YYMMDD') and status ='지각' and subject_id=#{subjectId}) as "lateSum",
		    
		    (SELECT
		    count(*)
		    FROM attendance
		    WHERE TO_CHAR(att_date, 'YYMMDD') = TO_CHAR(sysdate, 'YYMMDD') and status ='결근' and subject_id=#{subjectId}) as "absenceSum",
		    
		    (SELECT
		    count(*)
		    FROM attendance
		    WHERE TO_CHAR(att_date, 'YYMMDD') = TO_CHAR(sysdate, 'YYMMDD') and status ='미출석' and subject_id=#{subjectId}) as "yetSum",
	    
	    	(SELECT
	        subject_name	   
		    FROM subject
		    WHERE subject_id=#{subjectId})  as "subjectName"
	    from dual
		
	</select>
	
	<select id="selectTotalCountBySubject" parameterType="int" resultType="int">
		SELECT
		    count(*)
		FROM users
		WHERE subject_id = #{subjectId}
	</select>	

</mapper>