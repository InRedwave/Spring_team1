<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.team01.myapp.community.dao.ICommunityRepository">
	<select id="getCommunityListByCategory"
		parameterType="map"
		resultType="com.team01.myapp.community.model.Community">
		<![CDATA[
		
		select 
			 rownum,
		     C_BOARD_ID as "communityBoardId", 
		     C_CATEGORY_ID as "communityCategoryId",
		     C_EMAIL as "communityEmail",
		     C_PASSWORD as "communityPassword",
		     C_TITLE as "communityTitle",
		     C_WRITE_DATE as "communityWriteDate",
		     C_READ_COUNT as "communityReadCount",
		     U_ID as "usersId",
		     C_CONTENT as "communityContent"
			from(
				select 
					rownum as rnum,
		            C_BOARD_ID ,
				    C_CATEGORY_ID ,
				    C_EMAIL ,
				    C_PASSWORD ,
				    C_TITLE ,
				    C_WRITE_DATE , 
				    C_READ_COUNT ,
				    U_ID ,
				    C_CONTENT 
				from(
				select      C_BOARD_ID ,
						    C_CATEGORY_ID ,
						    C_EMAIL ,
						    C_PASSWORD ,
						    C_TITLE ,
						    C_WRITE_DATE , 
						    C_READ_COUNT ,
						    U_ID ,
						    C_CONTENT 
						from(
						    select 
						        C_BOARD_ID ,
						        C_CATEGORY_ID ,
						        C_EMAIL  ,
						        C_PASSWORD ,
						        C_TITLE ,
						        C_WRITE_DATE ,
						        C_READ_COUNT ,
						        U_ID ,
						        C_CONTENT
		                
				            from community
				        )
				order by C_BOARD_ID desc
				) 
				where rownum <= #{end}
				) 
				where rnum >= #{start}
		]]>

	</select>

	<insert id="writeCommunity"
		parameterType="com.team01.myapp.community.model.Community">
		<![CDATA[
			insert into community (
			    C_BOARD_ID, 
			    C_CATEGORY_ID ,
			    C_EMAIL,
			    C_PASSWORD ,
			    C_TITLE ,
			    C_WRITE_DATE ,
			    C_READ_COUNT,
			    U_ID ,
			    C_CONTENT
			    )
			values (#{communityBoardId}, #{communityCategoryId}, #{communityEmail}, 
					#{communityPassword}, #{communityTitle}, sysdate, 0,
					#{usersId}, #{communityContent} )
					
			]]>
	</insert>

	<select id="selectMaxListNo" resultType="int">
		<![CDATA[
			select nvl(max(c_board_id),0) as "communityBoardId" from community
		]]>
	</select>

	<update id="updateReadCount" parameterType="int">
		<![CDATA[
			update community
    		set c_read_count = c_read_count+1
			where c_board_id = #{communityBoardId}
		]]>
	</update>
	
	<select id="readCommunityDetail" parameterType="int" resultType="com.team01.myapp.community.model.Community">
		<![CDATA[
			select
				COMMUNITY.C_BOARD_ID as "communityBoardId", 
				COMMUNITY.C_CATEGORY_ID as "communityCategoryId",
				COMMUNITY.C_EMAIL as "communityEmail",
				COMMUNITY.C_PASSWORD as "communityPassword",
				COMMUNITY.C_TITLE as "communityTitle",
				COMMUNITY.C_WRITE_DATE as "communityWriteDate",
				COMMUNITY.C_READ_COUNT as "communityReadCount",
				COMMUNITY.U_ID as "usersId",
				COMMUNITY.C_CONTENT as "communityContent",
				COMMUNITY.C_REPLY_NUMBER as "communityReplyNumber",
				C_FILE.C_FILE_ID AS "communityFileId",
                C_FILE.C_FILE_NAME AS "communityFileName",
                C_FILE.C_FILE_SIZE AS "communityFileSize",
                C_FILE.C_FILE_CONTENT_TYPE AS "communityContentType"
                
			from COMMUNITY left outer join C_FILE
            	on COMMUNITY.C_BOARD_ID = C_FILE.C_BOARD_ID
			where COMMUNITY.c_board_id = #{communityBoardId}
		]]>
	</select>
	<select id="selectMaxFileId" parameterType="int" resultType="int">
		<![CDATA[
			select 
			    nvl(max(c_file_id), 0) as "communityFileId"
			 from c_file
		]]>
	</select>
	
	<insert id="insertFileData" parameterType="com.team01.myapp.community.model.CommunityFile">
		<![CDATA[
			insert into C_FILE
				(C_FILE_ID, C_FILE_NAME, C_FILE_SIZE, C_FILE_CONTENT_TYPE, C_FILE_DATA, C_BOARD_ID)
			values (#{communityFileId}, #{communityFileName}, #{communityFileSize}, #{communityFileContentType}, 
					#{communityFileData}, #{communityCBoardId})
			
		]]>
	</insert>
	
	<select id="getFile" parameterType="int" resultType="com.team01.myapp.community.model.CommunityFile">
		<![CDATA[
			select
			    C_FILE_ID as "communityFileId",
			    C_FILE_NAME as "communityFileName",
			    C_FILE_SIZE as "communityFileSize",
			    C_FILE_CONTENT_TYPE as "communityFileContentType",
			    C_FILE_DATA as "communityFileData",
			    C_BOARD_ID as "communityCBoardId"
			from C_FILE
			where C_BOARD_ID = #{communityCBoardId}
		]]>
	</select>
	
	
	
	
	
	<update id="updateCommunityReplyNumber" parameterType="int">
		<![CDATA[
		update community
   	 	set C_REPLY_NUMBER = C_REPLY_NUMBER +1
   	 	where C_BOARD_ID = #{communityBoardId}
		]]>
	</update>
	
	<insert id="writeCommunityReply" parameterType="com.team01.myapp.community.model.CommunityComment">
		<![CDATA[
		insert into C_COMMENT
   			( CC_COMMENT_NO,
   			 CC_WRITE_DATE,
  			 U_ID,
    		CC_CONTENT,
    		C_BOARD_ID,
    		CC_REPLY_NUMBER )
		values (SEQ_CC_COMMENT_NO.nextval, sysdate, #{userId}, #{communityCommentContent}, #{communityBoardId}, #{communityCommentReplyNumber})
		]]>
	</insert>
	
	
	<select id="getCommunityCommentList" parameterType="int" resultType="com.team01.myapp.community.model.CommunityComment">
		<![CDATA[
			select 
			    c_comment.CC_COMMENT_NO as "communityCommentNo",
			    c_comment.CC_WRITE_DATE as "communityCommentWriteDate",
			    c_comment.U_ID as "userId",
			    c_comment.CC_CONTENT as "communityCommentContent",
			    c_comment.CC_REPLY_NUMBER as "communityCommentReplyNumber",
			    c_comment.CC_MASTER_NUMBER as "communityCommentMasterNumber"
			from community left outer join c_comment
			on community.c_board_id = c_comment.C_BOARD_ID
			where community.c_board_id = #{communityBoardId}
			order by CC_COMMENT_NO asc
		]]>
	</select>
	
	<update id="updateCommunity" parameterType="com.team01.myapp.community.model.Community">
	<![CDATA[
		UPDATE 
        		community
		SET 
		        U_ID= #{usersId},
		        C_TITLE= #{communityTitle},
		        C_CONTENT=#{communityContent}, C_WRITE_DATE=SYSDATE
		WHERE 
        		C_BOARD_ID=#{communityBoardId}
	]]>
	</update>
	
	<update id="updateFileData" parameterType="com.team01.myapp.community.model.CommunityFile">
	<![CDATA[
		UPDATE 
			C_FILE
		SET 
			C_FILE_NAME=#{communityFileName}, C_FILE_SIZE=#{communityFileSize},
			C_FILE_CONTENT_TYPE=#{communityFileContentType}, C_FILE_DATA=#{communityFileData}
		WHERE 
			C_FILE_ID=#{communityFileId}
	]]>
	</update>
	
	
	
	<delete id="deleteFileData" parameterType="int">
	<![CDATA[
		DELETE FROM C_FILE
			WHERE EXISTS (SELECT C_BOARD_ID FROM community
			WHERE community.C_BOARD_ID=#{communityBoardId} AND community.C_BOARD_ID = C_FILE.C_BOARD_ID )
	]]>
	</delete>
	<delete id="deleteCommunity" parameterType="int">
	<![CDATA[
		DELETE FROM 
			COMMUNITY
		WHERE 
			C_BOARD_ID=#{communityBoardId}
	]]>
	</delete>
	
	<select id="getPassword" parameterType="int" resultType="String">
		<![CDATA[
			select C_PASSWORD as "communityPassword"
			from  community	   
			where C_BOARD_ID = #{communityBoardId}
		]]>
	</select>
	
	<select id="selectSearchCommunity" parameterType="string" resultType="int">
		<![CDATA[
			SELECT COUNT(C_BOARD_ID) AS "count"
			FROM community
			WHERE 
				C_TITLE LIKE #{keyword}
			OR
				C_CONTENT LIKE #{keyword}
		]]>
	</select>
	<select id="selectSearchCommunityList"
		parameterType="map"
		resultType="com.team01.myapp.community.model.Community">
		<![CDATA[
		
		SELECT
            rownum,
		     C_BOARD_ID as "communityBoardId", 
		     C_CATEGORY_ID as "communityCategoryId",
		     C_EMAIL as "communityEmail",
		     C_PASSWORD as "communityPassword",
		     C_TITLE as "communityTitle",
		     C_WRITE_DATE as "communityWriteDate",
		     C_READ_COUNT as "communityReadCount",
		     U_ID as "usersId",
		     C_CONTENT as "communityContent"
				FROM (
					SELECT
						rownum as rnum,
		            C_BOARD_ID ,
				    C_CATEGORY_ID ,
				    C_EMAIL ,
				    C_PASSWORD ,
				    C_TITLE ,
				    C_WRITE_DATE , 
				    C_READ_COUNT ,
				    U_ID ,
				    C_CONTENT 
					FROM (
						SELECT * FROM community
						WHERE 
							C_TITLE LIKE #{keyword}
							OR
							C_CONTENT LIKE #{keyword}
						ORDER BY C_WRITE_DATE
						)
					)
				WHERE RNUM BETWEEN 1 AND 10
		]]>

	</select>
	
	<select id="readCountListByCategory" parameterType="int" resultType="com.team01.myapp.community.model.Community">
		<![CDATA[
			select
				C_BOARD_ID as "communityBoardId", 
				C_CATEGORY_ID as "communityCategoryId",
				C_EMAIL as "communityEmail",
				C_PASSWORD as "communityPassword",
				C_TITLE as "communityTitle",
				C_WRITE_DATE as "communityWriteDate",
				C_READ_COUNT as "communityReadCount",
				U_ID as "usersId",
				C_CONTENT as "communityContent",
				C_REPLY_NUMBER as "communityReplyNumber"
			from (select
                    rownum as rnum,
                    C_BOARD_ID,
                    C_CATEGORY_ID,
                    C_EMAIL ,
                    C_PASSWORD ,
                    C_TITLE ,
                    C_WRITE_DATE ,
                	C_READ_COUNT ,
                	U_ID ,
                	C_CONTENT ,
                	C_REPLY_NUMBER 
               from community
               order by C_READ_COUNT desc )
             where rownum <6
		]]>
	</select>
	
	

</mapper>